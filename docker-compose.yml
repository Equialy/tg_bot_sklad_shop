services:
  postgres:
    image: postgres:17
    container_name: postgres_aiogram_tg_shop_sami
    env_file:
      - .env.docker-compose
    environment:
      POSTGRES_DB: ${DB__NAME}
      POSTGRES_USER: ${DB__USER}
      POSTGRES_PASSWORD: ${DB__PASSWORD}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

    ports:
      - "${DB__PORT}:5432"
    restart: "unless-stopped"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB__USER} -d ${DB__NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"
    networks:
      - app_network
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_aiogram_tg_shop_sami
    env_file:
      - .env.docker-compose
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"
    networks:
      - app_network

networks:
  app_network:
